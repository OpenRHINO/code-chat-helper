import os
import hmac
import hashlib
from time import sleep
import openai
from github import Github


def preprocess_changes(changes_str):
    lines = changes_str.split('\n')
    processed_lines = []
    for line in lines:
        if line.startswith('+'):
            processed_lines.append(f'(+) {line[1:]}')
        elif line.startswith('-'):
            processed_lines.append(f'(-) {line[1:]}')
        else:
            processed_lines.append(line)
    return '\n'.join(processed_lines)


# Set up OpenAI API client
OPENAI_API_KEY = "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"
# openai.api_key = os.environ.get("OPENAI_API_KEY")
openai.api_key = OPENAI_API_KEY

# Set up GitHub API client
# gh = Github(os.environ.get("GITHUB_TOKEN"))
gh = Github("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")

# Get the code changes from the PR
gh_repo = gh.get_repo("OpenRHINO/RHINO-CLI")
gh_pr = gh_repo.get_pull(67)
code_changes = gh_pr.get_files()


"""
TODO:

1. GitHub PR api
2. GPT-3.5-turbo or text-davinci-003?
3. How to use GPT-3.5-turbo? what is the parameters? What is a better prompt?
4. How to use text-davinci-003? what is the parameters? What is a better prompt?
5. + and - in the code changes, does gpt knows it?
6. online code, compare the difference between this file and pr-review.py
"""

# Concatenate the changes into a single string
changes_str = "Title: " + gh_pr.title + "\n"
if gh_pr.body is not None:
    changes_str += "Body: " + gh_pr.body + "\n"
for change in code_changes:
    changes_str += f"File: {change.filename}\nPatch:\n{change.patch}\n\n"
# changes_str = preprocess_changes(changes_str)
print(changes_str)

# Call GPT to get the review result
messages = [
    {
        "role": "system",
        "content": "As an AI assistant with programming expertise, you are a meticulous code reviewer."},
    {"role": "user",
        "content": f"Review the following pull request. Summarize the code changes, provide your suggestions, and determine whether it should be approved or not.:\n{changes_str}"}
]
response = openai.ChatCompletion.create(
    model="gpt-3.5-turbo",
    messages=messages,
    max_tokens=300,
    temperature=0.7,
    n=3,
)
review = f"**[AI Review]** This comment is generated by an AI model (GPT-3.5-turbo).\n\n{response.choices[0]['message']['content'].strip()}"
print(review)
print("\n")


# response = openai.Completion.create(
#     engine="text-davinci-003",
#     prompt=f"请帮忙评审一个PR:\n{changes_str}",
#     max_tokens=300,
#     n=2,
#     stop=None,
#     temperature=0.1,
# )
# review = f"**[AI Review]** This comment is generated by an AI model (text-davinci-003).\n\n{response.choices[0].text.strip()}"
# print(review)
# print("\n")
##### text-davinci-003 经常得到不完整的输出 #####
# sleep(5)

