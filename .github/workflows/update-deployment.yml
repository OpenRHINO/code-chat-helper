name: Continuous Deployment

on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  check_repository:
    runs-on: ubuntu-latest
    steps:
    - name: Check repository
      run: |
        if [[ "${{ github.repository }}" != "OpenRHINO/code-chat-helper" ]]; then
          echo "The CD workflow runs only in the upstream OpenRHINO/code-chat-helper repository.\n"
          echo "If you need to run the CD workflow in a fork repo, you may customize this workflow."
          exit 0
        fi

  deploy:
    runs-on: ubuntu-latest
    if: github.repository == 'OpenRHINO/code-chat-helper'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: openrhino
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Prepare
      id: prepare
      run: echo "::set-output name=image_tag::$(date +'%Y%m%d')-$(echo ${{ github.sha }} | cut -c -7)"

    - name: Build and push Docker images
      run: |
          cd pr_review
          docker build -t openrhino/pr-review-gpt:${{ steps.prepare.outputs.image_tag }} .
          docker push openrhino/pr-review-gpt:${{ steps.prepare.outputs.image_tag }}
          docker tag openrhino/pr-review-gpt:${{ steps.prepare.outputs.image_tag }} openrhino/pr-review-gpt:latest
          docker push openrhino/pr-review-gpt:latest
          cd ../conversation
          docker build -t openrhino/conversation-gpt:${{ steps.prepare.outputs.image_tag }} .
          docker push openrhino/conversation-gpt:${{ steps.prepare.outputs.image_tag }}
          docker tag openrhino/conversation-gpt:${{ steps.prepare.outputs.image_tag }} openrhino/conversation-gpt:latest
          docker push openrhino/conversation-gpt:latest

    - name: Set up Kubernetes environment
      uses: azure/k8s-set-context@v2
      with:
        kubeconfig: ${{ secrets.KUBE_CONFIG_DATA }}

    - name: Restart Deployment
      run: |
          kubectl set image deployment/pr-review-gpt pr-review-gpt=openrhino/pr-review-gpt:${{ steps.prepare.outputs.image_tag }} -n ${{ vars.NAMESPACE }}
          kubectl set image deployment/conversation-gpt conversation-gpt=openrhino/conversation-gpt:${{ steps.prepare.outputs.image_tag }} -n ${{ vars.NAMESPACE }}

