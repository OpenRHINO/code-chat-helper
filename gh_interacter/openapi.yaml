openapi: "3.0.0"
info:
  version: 1.0.0
  title: GitHub Repository Interaction
  license:
    name: MIT
servers:
  - url: https://openrhino.org
paths:
  /pr_content:
    get:
      summary: Get content of a GitHub Pull Request
      operationId: getPRContent
      tags:
        - pull-request
      parameters:
        - name: repo_full_name
          in: query
          description: Full name of the repository (e.g., "owner/repo")
          required: true
          schema:
            type: string
        - name: pr_number
          in: query
          description: The number of the pull request
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Detailed content of the requested Pull Request.
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/PullRequestContent"
        '404':
          description: Pull Request not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /file_content:
    get:
      summary: Get full content of a file in a GitHub repository. It should be invoked during every PR review to ensure that all pertinent details are considered.
      operationId: getFileContent
      tags:
        - repository
      parameters:
        - name: repo_full_name
          in: query
          description: Full name of the repository (e.g., "owner/repo")
          required: true
          schema:
            type: string
        - name: file_path
          in: query
          description: Path to the file in the repository
          required: true
          schema:
            type: string
        - name: branch_name  # New parameter added
          in: query
          description: Name of the repository branch
          required: false
          schema:
            type: string
            default: 'main'
      responses:
        '200':
          description: Full content of the specified file
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: string
        '404':
          description: File not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /issue_info:
    get:
      summary: Get title and description of a GitHub Issue
      operationId: getIssueInfo
      tags:
        - issue
      parameters:
        - name: repo_full_name
          in: query
          description: Full name of the repository (e.g., "owner/repo")
          required: true
          schema:
            type: string
        - name: issue_number
          in: query
          description: The number of the issue
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Title and description of the requested Issue
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                  description:
                    type: string
        '404':
          description: Issue not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /submit_pr_comment:
    post:
      summary: Submit a comment to a GitHub Pull Request or an issue. Only call this after the content of the comment has already been   explicitly agreed by the user.
      operationId: submitPRComment
      tags:
        - pull-request
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - repo_full_name
                - pr_number
                - comment_body
              properties:
                repo_full_name:
                  type: string
                  description: Full name of the repository (e.g., "owner/repo")
                pr_number:
                  type: integer
                  format: int32
                  description: The number of the pull request
                comment_body:
                  type: string
                  description: The content of the comment to be submitted
      responses:
        '201':
          description: Comment created successfully
        '400':
          description: Missing required parameters
        '401':
          description: GitHub access token is not set or invalid
        '404':
          description: Pull Request not found
        '500':
          description: Failed to create comment due to server error
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    PullRequestContent:
      type: object
      properties:
        title:
          type: string
        body:
          type: string
        source_branch:
          type: string
          description: The source branch of the pull request, crucial for subsequent PR Review steps, for retrieving modified files from the correct branch.
        source_repo: 
          type: string
          description: Name of the source repository of the pull request, crucial for subsequent PR Review steps, for retrieving modified files from the correct repository.
        code_changes:
          type: string
          description: The text of the code changes (diff) for the pull request
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
          
  /repo_structure:
    get:
      summary: Retrieve the project's directory structure
      operationId: getRepoStructure
      tags:
        - Project Structure
      parameters:
        - name: repo_full_name
          in: query
          required: true
          description: The full name of the GitHub repository in the format 'owner/repo'
          schema:
            type: string
        - name: branch_name
          in: query
          required: false
          description: The name of the branch to retrieve the directory structure from, defaults to 'main'
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the project's directory structure
          content:
            application/json:
              schema:
                type: object
                properties:
                  directories:
                    type: array
                    items:
                      type: string
                    description: A list of paths for all directories in the project
                  files:
                    type: array
                    items:
                      type: string
                    description: A list of paths for all files in the project
        '400':
          description: Incomplete or incorrect request parameters
        '404':
          description: Specified branch or repository not found
        '500':
          description: Internal server error
